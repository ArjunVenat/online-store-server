name: CI/CD Pipeline Workflow

on:
  - push

jobs: 
  Scan-and-Deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Starting CI/CD workflow"
      - name: Check out repo code
        uses: actions/checkout@v4
      - name: Scan for Vulnerabilities
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.ref_name }}

      # In order to tag the Docker version and push it to the repo, we need to extract the version from package.json
      - name: Install Node to extract version
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Extract version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Login to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_SERVER_REPO }}
      - name: Build Docker Image
        run: docker build -f Dockerfile -t online-store-server:latest .
      - name: Tag Docker Image
        run: |
          docker tag online-store-server:${{ env.VERSION }} ${{ secrets.ECR_SERVER_REPO }}:${{ env.VERSION }}
          docker tag online-store-server:${{ env.VERSION }} ${{ secrets.ECR_SERVER_REPO }}:latest
      - name: Push Docker Image to ECR Repository
        run: |
          docker push ${{ secrets.ECR_SERVER_REPO }}:${{ env.VERSION }}
          docker push ${{ secrets.ECR_SERVER_REPO }}:latest
      
      # - name: SSH into AWS EC2 Server and run Docker Compose
      #   run: 


